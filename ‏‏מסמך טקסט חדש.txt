#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <stdio.h>
//#include "spkmeans.h"
//#include "kmeans.c"

double** formInputToMatrix(){ //Guy 

}

double calculateWeight(double* a, double* b, int d)
{
    double sum = 0, norm=0;
    int i=0;
    for (i=0;i<d;i++)
    {
        sum += (a[i]-b[i])*(a[i]-b[i]);
    }
    norm = pow(sum,0.5);
    norm = -norm/2;
    return exp(norm);
}

double** formWeightedMatrix(double** vectorsMatrix, int n, int d)// Yair

{
    double ** weightedMatrix =(double **) calloc (n,sizeof(double*));
    assert(weightedMatrix!=NULL && "An Error Has Occured");
    double weight;
    int i=0, row=0, col=0;
    for (i=0; i<n; i++){
        weightedMatrix[i] = calloc (n,sizeof(double));
        assert( weightedMatrix[i]!=NULL && "An Error Has Occured");
    }
    for(row=0;row<n;row++)
    {
        for(col=row+1;col<n;col++)
        {
            weight = calcWeight(vectorsMatrix[row],vectorsMatrix[col],d);
            weightedMatrix[row][col] = weight;
            weightedMatrix[col][row] = weight;
        }
    }
    return weightedMatrix;


}
/**
 * @brief This function generates a degree matrix by all the '1' numbers of each row.
 * There are two cases: Regularmode (in )
 * 
 * 
 * @param weightedMatrix 
 * @param n - number of vertices
 * @param isRegularMode - If isRegularMode ==1 , it means that we want to compute the sum of each row, and if isRegularMode ==0 , it means 
 * that we in sqrt mode.
 * @return double** 
 */
double** formDegreeMatrix (double** weightedMatrix, int n, int isRegularMode){ // Yair
    double ** degreeMatrix =(double **) calloc (n,sizeof(double*));
    assert(degreeMatrix!=NULL && "An Error Has Occured");
    int k=0, row,col;
    double sum;
    for (k=0; k<n; k++){
        degreeMatrix[k] = calloc (n,sizeof(double));
        assert( degreeMatrix[k]!=NULL && "An Error Has Occured");
    }

    for (row=0;row<n;row++){
        sum = 0;
        for (col=0;col<n;col++){
            sum += weightedMatrix[row][col];
        }
        if (isRegularMode ==1){
             degreeMatrix[row][row] =(sum);
        }
        else {
            degreeMatrix[row][row] = 1/sqrt(sum);
        }
       
    }
    return degreeMatrix;

}



double** formLnormMatrix (double** weightedMatrix, int n){ // Guy

}

int main(int argc, char *argv[]){ // Guy

}




